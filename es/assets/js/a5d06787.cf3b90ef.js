"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2956],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(n),p=a,g=c["".concat(s,".").concat(p)]||c[p]||m[p]||o;return n?r.createElement(g,l(l({ref:t},d),{},{components:n})):r.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},24876:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:1,sidebar_label:"Ingest Data"},l="Ingest Data",i={unversionedId:"grillo-console/modules/data_management_modules/ingest_data",id:"grillo-console/modules/data_management_modules/ingest_data",title:"Ingest Data",description:"This module is typically enabled by default. It consumes station data in real-time from your Grillo sensor or SeedLink server and makes it available to other modules as a data stream.",source:"@site/docs/grillo-console/modules/data_management_modules/ingest_data.md",sourceDirName:"grillo-console/modules/data_management_modules",slug:"/grillo-console/modules/data_management_modules/ingest_data",permalink:"/es/docs/grillo-console/modules/data_management_modules/ingest_data",draft:!1,editUrl:"https://github.com/grillo/grillo-docs/tree/main/docs/grillo-console/modules/data_management_modules/ingest_data.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Ingest Data"},sidebar:"tutorialSidebar",previous:{title:"Module configuration",permalink:"/es/docs/grillo-console/modules/module_config"},next:{title:"Archive Data Stream",permalink:"/es/docs/grillo-console/modules/data_management_modules/archive_data"}},s={},u=[{value:"Configuration",id:"configuration",level:3}],d={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ingest-data"},"Ingest Data"),(0,a.kt)("p",null,"This module is typically enabled by default. It consumes station data in real-time from your Grillo sensor or SeedLink server and makes it available to other modules as a data stream."),(0,a.kt)("mermaid",{value:"flowchart TB\n   A[Grillo Sensor] & B[SeedLink Server] --\x3e Cp([<font color=333333><b>Ingest Data</b>]) --\x3e|Data Stream| D([Other Modules]) \n   style Cp fill:#99CCFF"}),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("b",null,"Ingestor")),(0,a.kt)("p",null,(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Verbose")," ","[boolean]",": ",(0,a.kt)("inlineCode",{parentName:"li"},"Logs")," are printed in when set to true")))))}m.isMDXComponent=!0}}]);